<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.activiti.system.mapper.SysUserOnlineMapper">

	<resultMap type="SysUserOnline" id="SysUserOnlineResult">
		<id     property="sessionId"         column="session_id"         />
		<result property="loginName"         column="login_name"        />
		<result property="deptName"          column="dept_name"         />
		<result property="ipaddr"            column="ipaddr"            />
		<result property="loginLocation"     column="login_location"    />
		<result property="browser"           column="browser"           />
		<result property="os"                column="os"                />
		<result property="status"            column="status"            />
		<result property="startTimestamp"    column="start_timestamp"   />
		<result property="lastAccessTime"    column="last_access_time"  />
		<result property="expireTime"        column="expire_time"       />
	</resultMap>
	
	<sql id="selectOnlineVo">
       select session_id, login_name, dept_name, ipaddr, login_location, browser, os, status, start_timestamp, last_access_time, expire_time
	   from sys_user_online
    </sql>
    
	<select id="selectOnlineById" parameterType="String" resultMap="SysUserOnlineResult">
		<include refid="selectOnlineVo"/>
		where session_id = #{sessionId}
	</select>

	<insert id="saveOnline" parameterType="SysUserOnline">
		MERGE INTO sys_user_online AS target
			USING (SELECT #{session_id} AS session_id, #{loginName} AS loginName) AS source
			ON target.session_id = source.session_id
			WHEN MATCHED THEN
				UPDATE SET
					target.login_name = source.loginName,
					target.dept_name = #{deptName},
					target.ipaddr = #{ipaddr},
					target.login_location = #{loginLocation},
					target.browser = #{browser},
					target.os = #{os},
					target.status = #{status},
					target.start_timestamp = #{startTimestamp},
					target.last_access_time = #{lastAccessTime},
					target.expire_time = #{expireTime}
			WHEN NOT MATCHED THEN
				INSERT (session_id, login_name, dept_name, ipaddr, login_location, browser, os, status, start_timestamp, last_access_time, expire_time)
					VALUES (#{sessionId}, #{loginName}, #{deptName}, #{ipaddr}, #{loginLocation}, #{browser}, #{os}, #{status}, #{startTimestamp}, #{lastAccessTime}, #{expireTime});


-- 		merge into sys_user_online(sessionId, login_name, dept_name, ipaddr, login_location, browser, os, status, start_timestamp, last_access_time, expire_time)
--         values (#{sessionId}, #{loginName}, #{deptName}, #{ipaddr}, #{loginLocation}, #{browser}, #{os}, #{status}, #{startTimestamp}, #{lastAccessTime}, #{expireTime})
	</insert>
	
 	<delete id="deleteOnlineById" parameterType="String">
 		delete from sys_user_online where session_id = #{sessionId}
 	</delete>
 	
 	<select id="selectUserOnlineList" parameterType="SysUserOnline" resultMap="SysUserOnlineResult">
		<include refid="selectOnlineVo"/>
		<where>
			<if test="ipaddr != null and ipaddr != ''">
				AND ipaddr like concat('%', #{ipaddr}, '%')
			</if>
			<if test="loginName != null and loginName != ''">
				AND login_name like concat('%', #{loginName}, '%')
			</if>
		</where>
	</select>
	
	<select id="selectOnlineByExpired" parameterType="String" resultMap="SysUserOnlineResult">
		<include refid="selectOnlineVo"/> o 
		WHERE o.last_access_time <![CDATA[ <= ]]> #{lastAccessTime} ORDER BY o.last_access_time ASC
	</select>

</mapper> 